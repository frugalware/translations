# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2008-01-03 05:04+0100\n"
"PO-Revision-Date: 2008-02-14 09:27+0100\n"
"Last-Translator: Hermier Michel <michel.hermier@gmail.com>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=2; plural=(n > 1);\n"
"X-Generator: Pootle 1.0\n"

# type: Plain text
#: FrugalBuild.txt:2
msgid "= FrugalBuild(5)"
msgstr "= FrugalBuild(5)"

# !!! NE PAS TRADUIRE POUR LE MOMENT !!!
# type: Plain text
# 
#: FrugalBuild.txt:4 makepkg.txt:4 pacman-g2.txt:4
msgid "== NAME"
msgstr "== NAME"

# type: Plain text
#: FrugalBuild.txt:6
msgid "FrugalBuild - Frugalware package builder descriptor"
msgstr "FrugalBuild - Descripteur de construction de paquets pour Frugalware"

# !!! NE PAS TRADUIRE POUR LE MOMENT !!!
# type: Plain text
#: FrugalBuild.txt:8 makepkg.txt:8 pacman-g2.txt:8
msgid "== SYNOPSIS"
msgstr "== SYNOPSIS"

# type: Plain text
#: FrugalBuild.txt:12
msgid ""
"This manual page is meant to describe general rules about FrugalBuilds. If "
"you're interested in the package builder makepkg itself, then see its manual "
"page, not this one."
msgstr ""
"Ce manuel a pour objectif de vous décrire les règles générales sur les "
"FrugalBuilds. Si vous êtes intéressé par le constructeur de paquet makepkg "
"lui-même, allez voir son manuel, pas celui-ci."

# type: Plain text
#: FrugalBuild.txt:14 makepkg.txt:12 pacman-g2.txt:12
msgid "== DESCRIPTION"
msgstr "== DESCRIPTION"

# type: Plain text
#: FrugalBuild.txt:16
msgid "=== Simple Example"
msgstr "=== Un exemple simple"

# type: Plain text
#: FrugalBuild.txt:17 FrugalBuild.txt:44 FrugalBuild.txt:157
#: FrugalBuild.txt:170 FrugalBuild.txt:202 FrugalBuild.txt:244
#: FrugalBuild.txt:408 FrugalBuild.txt:432 FrugalBuild.txt:448
#: pacman-g2.txt:299 pacman-g2.txt:400
#, no-wrap
msgid "----\n"
msgstr "----\n"

# type: Plain text
#: FrugalBuild.txt:20
msgid "# Compiling Time: 0.17 SBU # Maintainer: Name <email@addr.ess>"
msgstr "# Temps de compilation: 0.17 SBU # Mainteneur: Nom <email@addr.esse>"

# type: Plain text
#: FrugalBuild.txt:31
#, no-wrap
msgid ""
"pkgname=dvdauthor\n"
"pkgver=0.6.11\n"
"pkgrel=3\n"
"pkgdesc=\"Will generate a DVD movie from a valid mpeg2 stream\"\n"
"depends=('imagemagick' 'libdvdread')\n"
"Finclude sourceforge\n"
"groups=('xapps')\n"
"archs=('i686' 'x86_64')\n"
"sha1sums=('a99ea7ef6e50646b77ad47a015127925053d34ea')\n"
"# optimization OK\n"
"----\n"
msgstr ""
"pkgname=dvdauthor\n"
"pkgver=0.6.11\n"
"pkgrel=3\n"
"pkgdesc=\"Will generate a DVD movie from a valid mpeg2 stream\"\n"
"depends=('imagemagick' 'libdvdread')\n"
"Finclude sourceforge\n"
"groups=('xapps')\n"
"archs=('i686' 'x86_64')\n"
"sha1sums=('a99ea7ef6e50646b77ad47a015127925053d34ea')\n"
"# optimization OK\n"
"----\n"

# type: Plain text
#: FrugalBuild.txt:35
msgid ""
"As you can see, the setup is fairly simple. The first line tracks the time "
"of the last update, this is automatically updated after a successful build."
msgstr ""
"Comme vous pouvez le voir, la configuration est assez simple. La première "
"ligne nous renseigne de la date de la dernière mise à jour, cette dernière "
"est automatiquement modifié après une compilation terminée avec succès."

# type: Plain text
#: FrugalBuild.txt:38
msgid ""
"The next line defines its build time. Of course, it depends on your "
"hardware, so we use `SBU`s instead of minutes as a unit."
msgstr ""
"Cette prochaine ligne définie le temps de la compilation. Bien sûr cela "
"dépend de votre matériel, donc nous utilisons la valeur SBU  au lieu des "
"minutes comme unité."

# type: Plain text
#: FrugalBuild.txt:43
msgid ""
"`SBU` is the Static Binutils Unit, which means the time `repoman merge "
"binutils` takes on your machine. By default `makepkg` will print out how "
"many seconds the build took. After you have built `binutils`, you should "
"update your `/etc/makepkg.conf`:"
msgstr ""
"`SBU` est le Static Binutils Unit, qui signifie le temps que prend `repoman "
"merge binutils` sur votre machine. Par défaut makepkg vous indiqueras "
"combien de secondes prend la compilation. Après que vous ayez construit "
"binutils, vous devriez mettre à jour votre fichier `/etc/makepkg.conf`:"

# type: Plain text
#: FrugalBuild.txt:46
#, no-wrap
msgid ""
"SBU=\"257\"\n"
"----\n"
msgstr ""
"SBU=\"257\"\n"
"----\n"

# type: Plain text
#: FrugalBuild.txt:51
msgid ""
"The line above means compiling `binutils` on your machine took 257 seconds.  "
"Starting from this point, `makepkg` will print out SBUs instead of seconds "
"after successful builds, and this SBU value will be equal on everyone's "
"machine."
msgstr ""
"La ligne précédente veut dire que la compilation de binutils sur votre "
"machine vous a pris 257 secondes. À partir de cette référence, makepkg "
"affichera des SBU à la place des secondes après les compilations réussies, "
"et cette valeur SBU sera égale pour toutes les machines."

# type: Plain text
#: FrugalBuild.txt:57
msgid ""
"If you wish to maintain the package, write your name or nick and e-mail "
"address on the second line. If you just wrote the FrugalBuild don't plan to "
"maintain the package, then write `Contributor` instead of `Maintainer`, and "
"then someone can take it and will add his/her line later. Other lines like "
"`Modified by` are not allowed. Use the commit message to mention others if "
"you wish."
msgstr ""
"Si vous souhaitez maintenir le paquet, écrivez votre nom ou pseudo et votre "
"adresse email sur la troisième ligne du FrugalBuild. Si vous ne projetez pas "
"de maintenir le paquet, écrivez `Contributor` à la place de `Maintainer`, "
"plus tard quelqu'un le prendra en charge et rajoutera sa ligne à ce moment "
"là. Les autres lignes du style `Modified by` ne sont pas permises. Utilisez "
"le message commit pour mentionner ces autres lignes si vous le souhaitez."

# type: Plain text
#: FrugalBuild.txt:66
msgid ""
"`pkgname` defines the package name. It should not contain any uppercase "
"letters.  The package version defines the upstream version, while the "
"package release tracks the Frugalware-specific changes. `pkgrel` should be "
"an integer, the ones like `5wanda1` are reserved for security updates. In "
"the later case the rule is the following: If the original package's `pkgrel` "
"was 4, then increment it once when you add a security patch, but then use "
"`5wanda1`, `5wanda2` and so on. This way the user can easily upgrade to "
"`pkgrel=5` which is in `-current`."
msgstr ""
"'pkgname' définit le nom du paquet. Il ne doit contenir aucune lettre "
"majuscule.\n"
"La version du paquet définit la dernière version en amont, tandis que la "
"ligne release définit les changements spécifiques à Frugalware. 'pkgrel'  "
"doit être un nombre entier car les versions comme '5wanda1' ne sont "
"réservées qu'aux mises à jour de sécurité. Dans le cas postérieur, la règle "
"est la suivante : Si le \"pkgrel' du paquet original est 4, alors "
"incrémentez-le une fois que vous ajoutez un patch de sécurité, mais, "
"utilisez '5wanda1', '5wanda2' etc.... De cette façon, l'utilisateur peut "
"facilement mettre à jour 'pkgrel=5' qui est dans la branche '-current'."

# type: Plain text
#: FrugalBuild.txt:69
msgid ""
"`pkgdesc` is a short one-line description for the package. Usually taken "
"from the project's homepage or manpage. Try to keep the length under 80 "
"chars."
msgstr ""
"`pkgdesc` est une description uni-ligne du paquet. Elle est habituellement "
"prise depuis le site ou le manpage du projet. Essayez de garder sa longueur "
"inférieure à 80 caractères."

# type: Plain text
#: FrugalBuild.txt:74
msgid ""
"`depends()` is a bash array which defines the dependencies of the package.  "
"`depends()` lists those packages required for building and using the current "
"one.  If the dependency is runtime-only, then use `rodepends()`, if "
"buildtime-only then use `makedepends()`."
msgstr ""
"'depends()' est un tableau bash qui définit les dépendances du paquet.\n"
"'depends()' liste ces paquets qui sont requis pour la construction et "
"l'utilisation de ce dernier.\n"
"Si la dépendance est en runtime-only, utilisez 'rodepends()', si  elle est "
"en buildtime-only, utilisez 'makedepends()'."

# type: Plain text
#: FrugalBuild.txt:83
msgid ""
"The next line is a special `Finclude` command which allows you to inherit "
"any directive from a FrugalBuild scheme. They can be found in the `FST`, "
"under `/source/include`. The `util` scheme is always included, since its "
"provided functions are used by almost every FrugalBuild. Look at the `/"
"source/include/sourceforge.sh`, it provides the `url`, `up2date` and `source"
"()` directives, so we don't have to specify them here. After the `Finclude` "
"you can overwrite the inherited directives, for example define a custom "
"`up2date` if the inherited one is not suitable for you."
msgstr ""
"La prochaine ligne, 'Finclude', est une commande spéciale qui vous permet "
"d'hériter de n'importe quelle directive d'un arrangement d'un FrugalBuild. "
"Ils peuvent être trouvés dans le 'FST', dans '/source/include'. "
"L'arrangement 'util' est toujours inclus, puisque ses fonctions fournies "
"sont utilisées par presque tous les FrugalBuild. Regardez dans le fichier '/"
"source/include/sourceforge.sh', il fournit les directives 'url', 'up2date' "
"et 'source()', donc, nous n'avons pas besoin de les spécifier ici. Après "
"'Finclude', vous pouvez recopier les directives héritées, par exemple, pour "
"définir un 'up2date' personnalisé si l'hérité ne vous convient pas."

# type: Plain text
#: FrugalBuild.txt:87
msgid ""
"The `groups()` array's first element is mandatory, and it should be a valid "
"\"first group\". This means it should be in a `foo` or `foo-extra` format, "
"where `foo` or `foo-extra` is a directory under `/source` in the `FST`."
msgstr ""
"Le premier élément de tableau 'groups()'  est obligatoire, et il devrait "
"être un \"premier groupe\" valide. Cela signifie qu'il devrait être sous la "
"forme 'foo' ou 'foo-extra', où 'foo' ou 'foo-extra' donc des répertoires "
"dans '/source' dans le 'FST'."

# type: Plain text
#: FrugalBuild.txt:96
msgid ""
"The `archs()` array defines for which architectures the given package is "
"available. If it's not available, it means that `gensync` will skip it when "
"generating the package databases. If you are not able to provide a binary "
"package for a given arch, don't include that in `archs()`! For example, no "
"matter if the package could be compiled fir `x86_64`, if you haven't "
"compiled it yourself, don't include it. If you're sure it won't be available "
"on a given arch (for example it's written in assembly), then use !arch, for "
"example `!x86_64`."
msgstr ""
"La tableau `archs()` définit pour quelle architecture le paquet est "
"disponible. S'il n'est pas disponible, cela signifie que 'gensync' va "
"l'ignorer lors de la génération de la base de données de paquets. Si vous "
"n'être pas capable de fournir un paquet binaire pour une l'architecture "
"donnée, ne l'incluez pas dans `archs()` ! Par exemple, pas de problèmes si "
"le paquet peut être compilé sous `x86_64`. Si ce n'est pas vous qui l'avez "
"compilé, ne l'incluez pas. Si vous êtes sur qu'il ne sera pas disponible "
"pour une architecture donnée (par exemple, il est écrit en assembleur), "
"utilisez `!arch`, comme par exemple `!x86_64`."

# type: Plain text
#: FrugalBuild.txt:101
msgid ""
"The `sha1sums()` array can be generated with the `makepkg -G` command. Its "
"purpose is to prevent compiling from corrupt sources, especially when the "
"build is automatic. You can use signatures() if a digital signature is "
"provided by upstream, its goal is that you don't have to update it manually "
"every time."
msgstr ""
"Le `sha1sums()` peut être généré avec la commande `makepkg -g`. Ceci a pour "
"but d'éviter de compiler depuis des sources corrompues, surtout quand la "
"construction est automatique. Quand cela est possible vous pouvez utiliser "
"`signatures()`, son but est que vous n'avez pas à le mettre à jour "
"manuellement à chaque fois."

# type: Plain text
#: FrugalBuild.txt:109
msgid ""
"The last line will be added automatically to the end of the FrugalBuild if "
"the `build()` function used your `$CFLAGS` or `$CXXFLAGS`. This is handy if "
"you want to cross-compile on a faster machine for a slower architecture. If "
"the package doesn't use our `$CFLAGS` we can't cross-compile it, so please "
"try to avoid creating 'unoptimized' packages. If the package doesn't contain "
"any architecture-dependent file, then you can add this line manually as "
"`makepkg` will not detect this."
msgstr ""
"La dernière ligne va être automatiquement ajoutée à la fin du FrugalBuild si "
"la fonction `build()` a utilisé votre `$CFLAGS` ou `$CXXFLAGS`. C'est "
"pratique si vous voulez cross-compiler sur une machine rapide pour une "
"architecture lente. Si le paquet n'utilise pas notre `$CFLAGS`, nous ne "
"pouvons pas le cross-compiler, donc essayez d'éviter de créer des paquets "
"'non optimisés'. Si le paquet ne contient aucun fichier dépendant de "
"l'architecture, alors vous pouvez ajouter cette ligne manuellement comme "
"`makepkg` ne le détectera pas."

# type: Plain text
#: FrugalBuild.txt:117
msgid ""
"Finally we define a `build()` function that will build the package. If you "
"don't want to do anything special, you probably don't have to specify "
"anything, as the default build() (inherited from `util.sh`) will fit your "
"needs. Even if you define a custom build(), probably you can reuse parts of "
"the default build().  For the list of special functions provided by util.sh "
"and others refer to the `fwmakepkg` manpage. Again, `util.sh` is included "
"automatically, but you have to `Finclude` the others before using them!"
msgstr ""
"Enfin, nous définissons une fonction `build()` qui va construire le paquet. "
"Si vous ne voulez pas faire quelque chose de spécial, vous ne serez "
"probablement pas obligé de la spécifier, puisque le `build()` par défaut "
"(hérité de `util.sh`) va satisfaire vos besoins. Même si vous voulez définir "
"un `build()` personnalisé, vous pourrez probablement réutiliser des parties "
"du `build()` par défaut.\n"
"Pour la liste des fonctions spéciales, elle est fournie par util.sh et "
"d'autres par le manuel de `fwmakepkg`. Encore, `util.sh` est inclus "
"automatiquement, mais vous devez utilisez les `Finclude` avant de les "
"utiliser !"

# type: Plain text
#: FrugalBuild.txt:123
msgid ""
"Once the package is successfully installed into the package root, makepkg "
"will prepare some documentation. It will then strip debugging info from "
"libraries and binaries and generate a meta-info file. Finally, it will "
"compress everything into a `.fpm` file and leave it in the directory from "
"which you ran `makepkg`."
msgstr ""
"Une fois que le paquet est installé avec succès dans la racine du paquet, "
"makepkg va préparer quelques documentations. Il analysera ensuite les "
"renseignements de mise au point des bibliothèques et des fichiers binaires "
"et générera un fichier de méta-renseignements. Enfin, il compressera tout "
"dans un fichier `.fpm` dans le répertoire dans lequel vous aviez lancez "
"`makepkg`."

# type: Plain text
#: FrugalBuild.txt:126
msgid ""
"At this point you should have a package file in the current directory, named "
"something like `name-version-release-arch.fpm`. Done!"
msgstr ""
"A ce stade vous devriez avoir un paquet dans votre répertoire de travail, "
"portant un nom comme `nom-version-release-arch.fpm`. Voilà !"

# type: Plain text
#: FrugalBuild.txt:128
msgid "=== Install/Upgrade/Remove Scripting"
msgstr "=== Installe/Met à jour/Supprime Scripting"

# type: Plain text
#: FrugalBuild.txt:133
msgid ""
"`pacman-g2` has the ability to store and execute a package-specific non-"
"interactive script when it installs, removes, or upgrades a package. This "
"allows a package to 'configure itself' after installation and do the "
"opposite right before it is removed."
msgstr ""
"`pacman-g2` a la capacité de stocker et d'exécuter un script d'un paquet "
"spécifique et non interactif quand il installe, supprime, ou met à jour un "
"paquet. Ceci permet a un paquet de se configurer 'tout seul' après "
"l'installation, et faire l'opposé avant qu'il soit supprimé."

# type: Plain text
#: FrugalBuild.txt:135
msgid "The exact time the script is run varies with each operation:"
msgstr "Le temps exact que le script met varie avec chaque opération:"

# type: Plain text
#: FrugalBuild.txt:138
#, no-wrap
msgid ""
"pre_install::\n"
"\tscript is run right before files are extracted.\n"
msgstr ""
"pre_install::\n"
"\tscript est lancé avant que les fichiers soient décompressés.\n"

# type: Plain text
#: FrugalBuild.txt:141
#, no-wrap
msgid ""
"post_install::\n"
"\tscript is run right after files are extracted.\n"
msgstr ""
"post_install::\n"
"\tscript est lancé après que les fichiers soient décompressés.\n"

# type: Plain text
#: FrugalBuild.txt:144
#, no-wrap
msgid ""
"pre_upgrade::\n"
"\tscript is run right before files are extracted.\n"
msgstr ""
"pre_upgrade::\n"
"\tscript est lancé avant que les fichiers soient décompressés.\n"

# type: Plain text
#: FrugalBuild.txt:147
#, no-wrap
msgid ""
"post_upgrade::\n"
"\tscript is run after files are extracted.\n"
msgstr ""
"post_upgrade::\n"
"\tscript est lancé après que les fichiers soient décompressés.\n"

# type: Plain text
#: FrugalBuild.txt:150
#, no-wrap
msgid ""
"pre_remove::\n"
"\tscript is run right before files are removed.\n"
msgstr ""
"pre_remove::\n"
"\tscript est lancé avant que les fichiers soient retirés.\n"

# type: Plain text
#: FrugalBuild.txt:153
#, no-wrap
msgid ""
"post_remove::\n"
"\tscript is run right after files are removed.\n"
msgstr ""
"post_remove::\n"
"\tLe script est lancé après que les fichiers soient retirés.\n"

# type: Plain text
#: FrugalBuild.txt:156
msgid ""
"To use this feature, just create a file (eg, pkgname.install) and put it in "
"the same directory as the FrugalBuild script. Then use the install directive:"
msgstr ""
"Pour utiliser cette caractéristique, créez juste un fichier (par exemple, "
"pkgname.install) et mettez-le dans le même répertoire que votre FrugalBuild. "
"Ensuite, utilisez les directives d'installation:"

# type: Plain text
#: FrugalBuild.txt:159
#, no-wrap
msgid ""
"install=pkgname.install\n"
"----\n"
msgstr ""
"install=pkgname.install\n"
"----\n"

# type: Plain text
#: FrugalBuild.txt:164
msgid ""
"The install script does not need to be specified in the source array. If you "
"omit the install directive then makepkg will check for the $pkgname.install "
"script and will use it if it's present."
msgstr ""
"Le script d'installation n'a pas besoin d'être spécifié dans le tableau "
"source. Si vous  omettez la directive d'installation, makepkg va vérifier la "
"présence du script $pkgname.install et va l'utiliser s'il est présent."

# type: Plain text
#: FrugalBuild.txt:167
msgid ""
"You can find a scriptlet skeleton in the `/docs/skel/` directory, use it "
"when creating new packages."
msgstr ""
"Vous pouvez trouver un squelette de scriptlet dans le répertoire `/docs/skel/"
"`. Utilisez-le lorsque vous créez des nouveaux paquets."

# type: Plain text
#: FrugalBuild.txt:169
msgid ""
"The scriptlet messages are parsed, a simple example tells you everything:"
msgstr ""
"Les messages du scriptlet sont analysés syntaxiquement, un exemple simple "
"vous raconte tout :"

# type: Plain text
#: FrugalBuild.txt:179
#, no-wrap
msgid ""
"post_upgrade()\n"
"{\n"
"\techo \"START this will be good\"\n"
"\techo \"DONE 0\"\n"
"\techo \"START this will fail\"\n"
"\techo \"DONE 1\"\n"
"\techo \"old message\"\n"
"}\n"
"----\n"
msgstr ""
"post_upgrade()\n"
"{\n"
"\techo \"START this will be good\"\n"
"\techo \"DONE 0\"\n"
"\techo \"START this will fail\"\n"
"\techo \"DONE 1\"\n"
"\techo \"old message\"\n"
"}\n"
"----\n"

# type: Plain text
#: FrugalBuild.txt:182
msgid "=== FrugalBuild Directives"
msgstr "=== Directives du FrugalBuild"

# type: Plain text
#: FrugalBuild.txt:186
#, no-wrap
msgid ""
"pkgname::\n"
"\tThe name of the package. It can contain hyphens and should be lowercase. It is\n"
"\tusually the name part of the source tarball.\n"
msgstr ""
"pkgname::\n"
"\tLe nom du paquet. Il peut contenir des traits d'union et peut être en minuscule. C'est\n"
"\td'habitude le nom donné au tarball des sources.\n"

# type: Plain text
#: FrugalBuild.txt:190
#, no-wrap
msgid ""
"pkgver::\n"
"\tThis is the version of the software as released from the author (eg,\n"
"\t2.7.1).\n"
msgstr ""
"pkgver::\n"
"\tCeci est la version du logiciel étant publié par l'auteur (comme,\n"
"\t2.7.1).\n"

# type: Plain text
#: FrugalBuild.txt:193
#, no-wrap
msgid ""
"pkgrel::\n"
"\tThis is the release number specific to Frugalware Linux packages.\n"
msgstr ""
"pkgrel::\n"
"\tCela est le numéro de version spécifique du paquet pour Frugalware Linux.\n"

# type: Plain text
#: FrugalBuild.txt:197
#, no-wrap
msgid ""
"pkgdesc::\n"
"\tThis should be a brief description of the package and its\n"
"\tfunctionality.\n"
msgstr ""
"pkgdesc::\n"
"\tCela peut être une description brève du paquet et de ses\n"
"\tfonctionnalités.\n"

# type: Plain text
#: FrugalBuild.txt:201
#, no-wrap
msgid ""
"pkgdesc_localized::\n"
"\tArray of the localized package descriptions. The format is the\n"
"\tfollowing:\n"
msgstr ""
"pkgdesc_localized::\n"
"\tTableau des descriptions des paquets localisés. Le format est le\n"
"\tsuivant:\n"

# type: Plain text
#: FrugalBuild.txt:204
#, no-wrap
msgid ""
"pkgdesc_localized=('xx_YY foo' 'xx_YY bar')\n"
"----\n"
msgstr ""
"pkgdesc_localized=('xx_YY foo' 'xx_YY bar')\n"
"----\n"

# type: Plain text
#: FrugalBuild.txt:209
#, no-wrap
msgid ""
"url::\n"
"\tThis field contains an optional URL that is associated with the piece\n"
"\tof software being packaged. This is typically the project's website.\n"
msgstr ""
"url::\n"
"\tCe champ contient une adresse URL optionnelle qui est associée avec\n"
"\tle logiciel qui va être empaqueté. D'habitude, c'est le site web du projet.\n"

# type: Plain text
#: FrugalBuild.txt:212
#, no-wrap
msgid ""
"license::\n"
"\tSets the license type (eg, \"GPL\", \"BSD\", \"NON-FREE\").\n"
msgstr ""
"liscense::\n"
"\tSpécifie le type de licence (comme, \"GPL\", \"BSD\", \"NON-FREE\").\n"

# type: Plain text
#: FrugalBuild.txt:215
msgid ""
"NOTE: This option is currently optional and there are no rules what exact "
"formats you should use (if you should use `GPL` or `GPL2` and so on)."
msgstr ""
"NOTE : Cette option est actuellement optionnelle et il n'y a pas de règles "
"pour le format que vous devriez utiliser (Si vous deviez, utilisez `GPL` ou "
"`GPL2`, etc...)."

# type: Plain text
#: FrugalBuild.txt:221
#, no-wrap
msgid ""
"install::\n"
"\tSpecifies a special install script that is to be included in the package. This\n"
"\tfile should reside in the same directory as the FrugalBuild, and will be copied\n"
"\tinto the package by makepkg. It does not need to be included in the source\n"
"\tarray. (eg, `install=modutils.install`)\n"
msgstr ""
"install::\n"
"\tSpécifie un script d'installation spécial qui est inclus dans le paquet. Ce\n"
"\tfichier doit résider dans le même répertoire que le FrugalBuild, et devra être copié\n"
"\tdans le paquet par makepkg. Il n'a pas besoin d'être inclus dans le tableau\n"
"\tdes sources. (exemple : 'install=modutils.install')\n"

# type: Plain text
#: FrugalBuild.txt:226
#, no-wrap
msgid ""
"up2date::\n"
"\tThis directive should contain a command that prints the current upstream stable\n"
"\tversion of the project. This way we can check for newer version without\n"
"\tvisiting manually the project's website (see above).\n"
msgstr ""
"up2date::\n"
"\tCette directive doit contenir une commande qui affiche la dernière version stable\n"
"\tdu projet. Ici, nous pouvons vérifiez si une nouvelle version existe sans\n"
"\tvisiter manuellement le site web du projet (voir ci-dessus).\n"

# type: Plain text
#: FrugalBuild.txt:232
#, no-wrap
msgid ""
"source (array)::\n"
"\tThe source line is an array of source files required to build the package.\n"
"\tSource files must reside in the same directory as the FrugalBuild file, unless\n"
"\tthey have a fully-qualified URL. Then if the source file does not already exist\n"
"\tin `/var/cache/pacman-g2/src`, the file is downloaded by wget.\n"
msgstr ""
"source (tableau)::\n"
"\tLa ligne source est un tableau des fichiers sources requis pour construire le paquet.\n"
"\tLe ficher source doit être dans le même répertoire que je le fichier FrugalBuild, ) moins qu'il\n"
"\tai une adresse URL entièrement qualifiée. Alors, si le fichier source n'existe pas encore\n"
"\tdans `/var/cache/pacman-g2/src`, le fichier est téléchargé par wget.\n"

# type: Plain text
#: FrugalBuild.txt:238
#, no-wrap
msgid ""
"sha1sums (array)::\n"
"\tIf this field is present, it should contain an SHA1 hash for every source file\n"
"\tspecified in the source array (in the same order). `makepkg` will use this to\n"
"\tverify source file integrity during subsequent builds. To easily update\n"
"\tsha1sums in the FrugalBuild, run `makepkg -G`.\n"
msgstr ""
"sha1sums (tableau)::\n"
"\\Si le champ est présent, il doit contenir un calcul SHA1 pour chaque fichier source\n"
"\tspécifié dans le tableau des sources (dans le même ordre). `makepkg` va l'utiliser pour\n"
"\tvérifier l'intégrité des fichiers source pendant les constructions suivantes. Pour mettre à jour facilement\n"
"\t le sha1sums, dans le FrugalBuild, lancez `makepkg -G`.\n"

# type: Plain text
#: FrugalBuild.txt:243
#, no-wrap
msgid ""
"signatures (array)::\n"
"\tIf this field is present, it should contain an array of gpg signatures required\n"
"\tto validate the source files. Where there is no signature available just leave\n"
"\tit empty, like:\n"
msgstr ""
"signatures (tableau)::\n"
"\tSi ce champ est présent, il doit contenir un tableau des signatures gpg requises\n"
"\tpour valider les fichiers sources. Quand il n'y a pas de signatures disponibles, laissez-la\n"
"\tvide, comme :\n"

# type: Plain text
#: FrugalBuild.txt:246
#, no-wrap
msgid ""
"signatures=(${source[0]}.asc '')\n"
"----\n"
msgstr ""
"signatures=(${source[0]}.asc '')\n"
"----\n"

# type: Plain text
#: FrugalBuild.txt:252
#, no-wrap
msgid ""
"groups (array)::\n"
"\tThis is an array of symbolic names that represent groups of packages, allowing you to\n"
"\tinstall multiple packages by requesting a single target. For example, one could install\n"
"\tall KDE packages by installing the 'kde' group.\n"
msgstr ""
"groupes (tableau)::\n"
"\tC'est un tableau de noms symboliques représentant les groupes des paquets, vous permettant d'installer\n"
"\tplusieurs paquets en demandant une seule cible. Par exemple, quelqu'un pourrait installer\n"
"\ttous les paquets KDE en installant le groupe 'kde'.\n"

# type: Plain text
#: FrugalBuild.txt:257
#, no-wrap
msgid ""
"archs (array)::\n"
"\tThis array defines on which architectures the given package is available. If\n"
"\tit's not available, that will mean that `gensync` will skip it when generating\n"
"\tthe package database.\n"
msgstr ""
"archs (tableau)::\n"
"\tCe tableau défini sur quelle architecture le paquet donné est disponible. S'il\n"
"\tn'est pas disponible, cela signifiera que `gensync` va l'ignorer quand il va générer\n"
"\tla base de données de paquets.\n"

# type: Plain text
#: FrugalBuild.txt:264
#, no-wrap
msgid ""
"backup (array)::\n"
"\tA space-delimited array of filenames (without a preceding slash). The backup\n"
"\tline will be propagated to the package meta-info file for pacman-g2. This will\n"
"\tdesignate all files listed there to be backed up if this package is ever\n"
"\tremoved from a system. See 'HANDLING CONFIG FILES' in the `pacman-g2` manual\n"
"\tpage for more information.\n"
msgstr ""
"backup (tableau)::\n"
"\tUn tableau de noms de fichiers (sans slash les précédant). La ligne\n"
"\tbackup va être ajoutée au fichier méta-info du paquet pour pacman-g2. Cela "
"va\n"
"\tdésigner tous les fichiers qui vont être sauvegardé si jamais ce paquet est\n"
"\tdésinstallé d'un système. Allez voir la page 'HANDLING CONFIG FILE' dans le "
"manuel de 'pacman-g2'\n"
"\\pour plus d'informations."

# type: Plain text
#: FrugalBuild.txt:273
#, no-wrap
msgid ""
"depends (array)::\n"
"\tAn array of packages that this package depends on to build and run. Packages in\n"
"\tthis list should be surrounded with single quotes and contain at least the\n"
"\tpackage name. They can also include a version requirement of the form\n"
"\t'name<>version', where <> is one of five comparisons: >= (greater than or equal\n"
"\tto), <= (less than or equal to), = (equal to), > (greater than), or < (less\n"
"\tthan). See the FrugalBuild example above for an example of the depends\n"
"\tdirective.\n"
msgstr ""
"depends (tableau)::\n"
"\tCe tableau est une liste des paquets, que le paquet en création requiert, "
"pour être construit et lancé.\n"
"\tLes paquets de cette liste doivent avoir, au moins, leur nom encadré par "
"des guillemets simples.\n"
"\tIls peuvent  également inclure une version requise de la forme\n"
"\t'name<>version', où '<>' est l'un des cinq comparatifs : '>=' (supérieur ou "
"égal à),\n"
"\t'<=' (inférieur ou égal à), = (égal à), '>' (supérieur à), ou '<' "
"(inférieur à)\n"
"\tAllez voir l'exemple de FrugalBuild, plus haut, pour un exemple de la "
"directive \"depends\".\n"

# type: Plain text
#: FrugalBuild.txt:277
#, no-wrap
msgid ""
"makedepends (array)::\n"
"\tAn array of packages that this package depends on to build (ie, not required to\n"
"\trun). Packages in this list should follow the same format as depends.\n"
msgstr ""
"makedepends (tableau)::\n"
"\tCe tableau est une liste des paquets que le paquet en création requiert "
"pour être construit .\n"
"\t(c'est-à-dire, les paquets qui ne sont pas requis pour pouvoir le lancer).\n"
"\tLes paquets de cette liste doivent suivre le même format que la directive "
"'depends'.\n"

# type: Plain text
#: FrugalBuild.txt:284
#, no-wrap
msgid ""
"rodepends (array)::\n"
"\tAn array of packages that this package depends on to run (ie, not required to\n"
"\tbuild). Generally rodepends should be avoided in favour of depends except where\n"
"\tthis will create circular dependency chains. (For example building logrotate\n"
"\tdoesn't require that dcron be installed.) Packages in this list should follow\n"
"\tthe same format as depends.\n"
msgstr ""
"rodepends (tableau)::\n"
"\tCe tableau est une liste des paquets que le paquet requiert pour être lancé "
"(c'est-à-dire, les paquets qui ne sont pas requis pour le construire).\n"
"\tGénéralement, 'rodepends' doit être éviter en vue étant utilisé comme "
"'depends', excepté où\n"
"\tcelà va créer une chaîne circulaire des dépendances (par exemple, "
"construire 'logrotare'\n"
"\tne requiert pas que 'dcron' soit installé.). Les paquets de cette liste "
"doivent suivre\n"
"\tle même format que ceux de la directive 'depends'.\n"

# type: Plain text
#: FrugalBuild.txt:289
#, fuzzy, no-wrap
msgid ""
"conflicts (array)::\n"
"\tAn array of packages that will conflict with this package (ie, they cannot both\n"
"\tbe installed at the same time). This directive follows the same format as\n"
"\tdepends except you cannot specify versions here, only package names.\n"
msgstr ""
"conflicts (directive)::\n"
"\tCette directive est une liste des paquets qui sont en conflits avec le paquet en création (c'est-à-dire, qu'il ne peuvent pas cohabiter ensemble, être installer sur le même système.)\n"
"\tCette directive suit le même format que 'depends'. Cependant, vous ne pouvez pas\n"
"\tspécifier la version des paquets, ici, mais seulement leur nom."

# type: Plain text
#: FrugalBuild.txt:296
#, fuzzy, no-wrap
msgid ""
"provides (array)::\n"
"\tAn array of \"virtual provisions\" that this package provides. This allows a\n"
"\tpackage to provide dependency names other than it's own package name. For\n"
"\texample, the kernel-scsi and kernel-ide packages can each provide 'kernel'\n"
"\twhich allows packages to simply depend on 'kernel' rather than \"kernel-scsi OR\n"
"\tkernel-ide OR ...\"\n"
msgstr ""
"provides (directive)::\n"
"\tCette directive est une directive de \"dispositions virtuelles\" que le paquet en création fournit. Ceci autorise un\n"
"\tpaquet de fournir d'autres noms de dépendance que son propre nom de paquet. Par\n"
"\texemple, les paquets 'kernel-scsi' et et 'kernel-ide' peuvent chacun fournir 'kernel'\n"
"\tqui autorise les paquets de simplement dépendre de 'kernel' à la place de 'kernel-scsi' OU\n"
"\tde 'kernel-ide' OU...\n"

# type: Plain text
#: FrugalBuild.txt:301
#, fuzzy, no-wrap
msgid ""
"removes (array)::\n"
"\tThis is an array of files to be removed before the filecontlict check. Ideally\n"
"\tyou should never use it, but in some cases it's handy to remove conflicting\n"
"\tfiles generated by a scriptlet if you are sure about really nobody needs it.\n"
msgstr ""
"removes (directive)::\n"
"\tCette directive est une liste des fichiers qui vont être supprimés avant la vérification des conflits entre fichiers. Normalement,\n"
"\tvous ne devrez jamais l'utiliser. Mais dans certain cas, il est plus pratique de retirer les fichiers conflictuels générés par un scriptlet si vous êtes vraiment sûr(e) que personne n'en a besoin.\n"

# type: Plain text
#: FrugalBuild.txt:307
#, fuzzy, no-wrap
msgid ""
"replaces (array)::\n"
"\tThis is an array of packages that this package should replace, and can be used\n"
"\tto handle renamed/combined packages. For example, if the kernel package gets\n"
"\trenamed to kernel-ide, then subsequent 'pacman-g2 -Syu' calls will not pick up\n"
"\tthe upgrade, due to the differing package names. replaces handles this.\n"
msgstr ""
"replaces (directive)::\n"
"\tCette directive est une liste des paquets, que le paquet en construction devrais remplacer, et qui peut être utilisé\n"
"\tpour manipuler les paquets renommés/combinés. Par exemple, si le paquet 'kernel' est\n"
"\trenommé en 'kernel-ide', alors l'appel de 'pacman-g2 -Syu' ne va pas reprendre la mise à niveau, due à la différence des noms des paquets. 'replaces' corrige ça.\n"

# type: Plain text
#: FrugalBuild.txt:310
#, fuzzy, no-wrap
msgid ""
"options (array)::\n"
"\tThis is an array of various boolean options. The possible values are:\n"
msgstr ""
"options (directive)::\n"
"\tCette directive est une liste de diverses options booléennes. Les valeurs possibles sont :\n"

# type: Plain text
#: FrugalBuild.txt:313
#, fuzzy, no-wrap
msgid ""
"\tnodocs: Don't add any documentation automatically (ie. when there'll be a\n"
"\tseparate documentation subpackage).\n"
msgstr ""
"\tnodocs : N'ajoute aucune documentation automatiquement (c'est-à-dire, quand il y a\n"
"\tune documentation des sous-paquets séparée).\n"

# type: Plain text
#: FrugalBuild.txt:315
#, no-wrap
msgid "\tnostrip: Don't strip binaries/libraries.\n"
msgstr ""

# type: Plain text
#: FrugalBuild.txt:318
#, fuzzy, no-wrap
msgid ""
"\tforce: This is used to force the package to be upgraded by --sysupgrade, even\n"
"\tif its an older version.\n"
msgstr ""
"\tforce : Cela force le paquet à être mis à niveau par '--sysupgrade' même\n"
"\ts'il est d'une ancienne version.\n"

# type: Plain text
#: FrugalBuild.txt:321
#, fuzzy, no-wrap
msgid ""
"\tstick: This is used to skip a package upgrade, even a newer version is\n"
"\tavailable (eg. for web applications where a manual upgrade is better).\n"
msgstr ""
"\tstick : Ceci est utilisé pour sauter une mise à niveau d'un paquet, même si une nouvelle version est\n"
"\tdisponible (par exemple, les applications web où une mise à niveau manuelle est meilleure).\n"

# type: Plain text
#: FrugalBuild.txt:325
#, fuzzy, no-wrap
msgid ""
"\tnobuild: If this directive set, gensync will ignore this package, so users must\n"
"\tbuild these packages on their machines, they will not be able to install them\n"
"\twith pacman-g2 -S. Useful for closed-source, but freeware programs.\n"
msgstr ""
"\tnobuild : Si cette directive est présente, 'gensync' va ignorer ce paquet, donc les utilisateurs doivent\n"
"\tconstruire ces paquets sur leur(s) machine(s). Ils ne leur sera pas possible de les installer\n"
"\tavec 'pacman-g2 -S'. C'est très utile pour les logiciels, dont le code-source est fermé mais gratuits.\n"

# type: Plain text
#: FrugalBuild.txt:328
#, fuzzy, no-wrap
msgid ""
"\tnofakeroot: Don't drop privileges after chrooting. Required by some broken\n"
"\tpackages.\n"
msgstr ""
"\tnofakeroot : N'abandonne pas les privilèges super-utilisateur après le chrooting. Cette directive est requise par certain\n"
"\tpaquet cassé.\n"

# type: Plain text
#: FrugalBuild.txt:330
#, fuzzy, no-wrap
msgid "\tscriptlet: Don't skip executing scriptlets even if we're in chroot.\n"
msgstr "\tscriptlet : Ne saute pas l'exécution des 'scriptlets' même si l'on est dans le chroot.\n"

# type: Plain text
#: FrugalBuild.txt:332
#, fuzzy, no-wrap
msgid "\tnomirror: This means that the source should not be mirrored.\n"
msgstr "\tnomirror : Ceci signifie que les sources doivent être mirroirées (Ca veut dire, hébergé sur un miroir).\n"

# type: Plain text
#: FrugalBuild.txt:335
#, fuzzy, no-wrap
msgid ""
"\tgenscriptlet: Informs makepkg about not having a scriptlet is intentional. You\n"
"\twant to use this when the scriptlet is generated during build().\n"
msgstr ""
"\tgenscriptlet : Ceci informe makepkg si l'absence d'un 'scriptlet' est intentionnel. Vous\n"
"\tdevez l'utiliser quand le 'scriptlet' est généré durant le 'build()'.\n"

# type: Plain text
#: FrugalBuild.txt:338
#, fuzzy
msgid ""
"NOTE: Feel free to use `nomirror` in a WIP repo but please try avoid it when "
"pushing to a production repository."
msgstr ""
"Note : Vous êtes libre d'utiliser 'nomirror' dans un dépôt WIP, mais s'il "
"vous plait, essayez de l'éviter quand il est pousser dans un dépôt de "
"production."

# type: Plain text
#: FrugalBuild.txt:340
#, fuzzy
msgid "=== What is the process of chrooted build?"
msgstr "=== Quel est le processus de la construction chrootée ?"

# type: Plain text
#: FrugalBuild.txt:345
#, fuzzy
msgid ""
"First, what is chroot? If you use `makepkg -H`, then you use fakeroot to "
"prevent build() from modifying the host system, and you use a prefix or "
"DESTDIR directive to install everything to a directory and not under to the "
"host system. This is good, but not enough."
msgstr ""
"Premièrement, qu'est-ce que le chroot ? Si vous utilisez 'makepkg -H', vous "
"utilisez un fakeroot pour éviter que 'build()' ne modifie le système hôte, "
"et vous utilisez une directive 'prefix' ou 'DESTDIR' pour tout installer "
"dans un répertoire qui n'est pas dans le système hôte. C'est bon, mais ce "
"n'est pas assez. "

# type: Plain text
#: FrugalBuild.txt:354
msgid ""
"This system lacks the ability to control the list of installed packages "
"during the build on the system of a packager. Because of this, the given "
"compiled package may link itself to an extra installed library. This way we "
"can't really control the list of real dependencies. For example if "
"`libquicktime` is installed from source on your system, then `mplayer` or "
"any other program can link itself to that, and so that depends() will be "
"incorrect. Or if you have the closed source binary NVidia drivers installed, "
"some programs will link to NVidia's libraries."
msgstr ""

# type: Plain text
#: FrugalBuild.txt:357
msgid ""
"Of course there is a solution to avoid this, to use a real `chroot` instead "
"of a simple `fakeroot`. What does this mean? The following:"
msgstr ""

# type: Plain text
#: FrugalBuild.txt:365
msgid ""
"When starting the build, a core chroot system is installed under /var/"
"chroot.  (Of course you can change this value under `/etc/makepkg.conf`.) "
"The core system contains ~ 60 packages which must be installed to build any "
"package in a chrooted environment. These packages (for example gcc, kernel-"
"headers, make)  should not be mentioned in makedepends(). `pacman-g2 -Sg "
"core chroot-core devel-core` should show you the actual list. (We try to "
"change this list rarely and try to keep it short, of course.)"
msgstr ""

# type: Plain text
#: FrugalBuild.txt:371
msgid ""
"When you start building with `makepkg` (without `-H`), pacman-g2 will "
"install these packages to /var/chroot if necessary. This will produce a "
"fully 'clean' Frugalware system, that consists of base packages only. This `/"
"var/chroot` is fully separated from the host system so that this will solve "
"the problems mentioned above. (Linking to a library installed from source, "
"etc.)"
msgstr ""

# type: Plain text
#: FrugalBuild.txt:376
msgid ""
"Here comes the fun part. The packages listed in depends() and makedepends() "
"are installed to this clean (`/var/chroot`) system. From this point, this "
"chroot is capable to build the specified package in it without unnecessary "
"packages being installed, fully separated from the host system."
msgstr ""

# type: Plain text
#: FrugalBuild.txt:381
msgid ""
"After this, the chroot should be cleaned up which means the removal of the "
"installed depends() and makedepends(). This ensures you do not have to build "
"the core chroot from scratch. This action is performed by `makepkg` after a "
"successful build."
msgstr ""

# type: Plain text
#: FrugalBuild.txt:385
msgid ""
"This way we can prevent lots of dependency problems and it is even possible "
"to build packages for a different Frugalware version. This is quite "
"efficient when building security updates or fixing critical bugs in the `-"
"stable` tree."
msgstr ""

# type: Plain text
#: FrugalBuild.txt:390
msgid ""
"If the build fails, the working directory will not be deleted, you can find "
"it under `/var/chroot/$tree/var/tmp/fst`. Later if you want to clean your "
"chroot (delete the working directory and remove unnecessary packages) you "
"can use `makepkg -C`."
msgstr ""

# type: Plain text
#: FrugalBuild.txt:393
msgid ""
"To deactivate building in a `chroot` (for testing purposes), you should run "
"`makepkg` with the `-H` option."
msgstr ""

# type: Plain text
#: FrugalBuild.txt:395
msgid "=== Package splitting"
msgstr ""

# type: Plain text
#: FrugalBuild.txt:399
msgid ""
"Package splitting means moving out a list of specified files to "
"'subpackages' (like `libmysql` out of `mysql`) and then defining the "
"properties of subpackages."
msgstr ""

# type: Plain text
#: FrugalBuild.txt:404
msgid ""
"NOTE: If you create several subpackages, maintaining those packages will "
"require more and more time. Thus, unnecessary splits aren't welcome.  "
"Especially, if you split out a library, then don't move the headers to the "
"package just to speed up building with a few seconds!"
msgstr ""

# type: Plain text
#: FrugalBuild.txt:407
msgid ""
"The subpkgs() array is to define the pkgnames of the subpackages. From now "
"all the directive have a subfoo equivalent:"
msgstr ""

# type: Plain text
#: FrugalBuild.txt:424
#, no-wrap
msgid ""
"pkgname -> subpkgs()\n"
"pkgdesc -> subdescs()\n"
"pkgdesc_localized -> subdescs_localized()\n"
"license() -> sublicense()\n"
"replaces() -> subreplaces()\n"
"groups() -> subgroups()\n"
"depends() -> subdepends()\n"
"rodepends() -> subrodepends()\n"
"removes() -> subremoves()\n"
"conflicts() -> subconflicts()\n"
"provides() -> subprovides()\n"
"backup() -> subbackup()\n"
"install -> subinstall()\n"
"options -> suboptions()\n"
"archs -> subarchs()\n"
"----\n"
msgstr ""

# type: Plain text
#: FrugalBuild.txt:429
msgid ""
"Also note that bash does not support two-dimensional arrays, so when "
"defining the array of arrays, then quotes are the major separators and "
"spaces are the minor ones."
msgstr ""

# type: Plain text
#: FrugalBuild.txt:431
msgid "Simple example:"
msgstr ""

# type: Plain text
#: FrugalBuild.txt:438
#, no-wrap
msgid ""
"subpkgs=('foo' 'bar')\n"
"subdescs=('desc of foo' 'desc of bar')\n"
"subdepends=('foodep1 foodep2' 'bardep1 bardep2')\n"
"subgroups=('apps' 'apps')\n"
"subarchs=('i686 x86_64' 'i686 x86_64')\n"
"----\n"
msgstr ""

# type: Plain text
#: FrugalBuild.txt:442
msgid ""
"You may define conflicts, replaces and other directives for your "
"subpackages, but the requirement is only to define these 5 ones."
msgstr ""

# type: Plain text
#: FrugalBuild.txt:447
msgid ""
"The second part is to move some files to the - just defined - subpackages. "
"You should use the Fsplit command for this at the end of your build() "
"function.  You can read more about Fsplit in the fwmakepkg documentation, "
"but here is a short example:"
msgstr ""

# type: Plain text
#: FrugalBuild.txt:450
#, no-wrap
msgid ""
"Fsplit subpkgname usr/share/\n"
"----\n"
msgstr ""
"Fsplit subpkgname usr/share/\n"
"----\n"

# type: Plain text
#: FrugalBuild.txt:454
msgid ""
"This will move the /usr/share dir of the package to the \"subpkgname\" "
"subpackage."
msgstr ""

# type: Plain text
#: FrugalBuild.txt:457
msgid ""
"NOTE: Don't use a trailing slash when defining file patterns with wildcards "
"in it!"
msgstr ""

# type: Plain text
#: FrugalBuild.txt:459 makepkg.txt:161 pacman-g2.txt:423
msgid "== SEE ALSO"
msgstr "== VOIR AUSSI"

# type: Plain text
#: FrugalBuild.txt:461
#, no-wrap
msgid "*makepkg*(8), *pacman-g2*(8)\n"
msgstr "*makepkg*(8), *pacman-g2*(8)\n"

# type: Plain text
#: FrugalBuild.txt:463 makepkg.txt:165 pacman-g2.txt:427
msgid "== AUTHORS"
msgstr "== AUTEURS"

# type: Plain text
#: FrugalBuild.txt:464 makepkg.txt:166 pacman-g2.txt:428
msgid "See /usr/share/doc/pacman-g2-*/AUTHORS."
msgstr "Voir /usr/share/doc/pacman-g2-*/AUTHORS."

# type: Plain text
#: makepkg.txt:2
msgid "= makepkg(8)"
msgstr "= makepkg(8)"

# type: Plain text
#: makepkg.txt:6
msgid "makepkg - creates pacman-g2 packages"
msgstr ""

# type: Plain text
#: makepkg.txt:10
msgid "makepkg [options]"
msgstr ""

# type: Plain text
#: makepkg.txt:21
msgid ""
"`makepkg` will build packages for you. All it needs is a build-capable Linux "
"platform, `wget`, and some build scripts. The advantage to a script-based "
"build is that you only really do the work once. Once you have the build "
"script for a package, you just need to run `makepkg` and it will do the "
"rest: download and validate source files, check dependencies, configure the "
"build-time settings, build the package, install the package into a temporary "
"root, make customizations, generate meta-info, and package the whole thing "
"up for `pacman-g2` to use."
msgstr ""

# type: Plain text
#: makepkg.txt:24
msgid ""
"`makeworld` can be used to rebuild an entire package group or the entire "
"build tree. See `makeworld --help` for syntax."
msgstr ""

# type: Plain text
#: makepkg.txt:26 pacman-g2.txt:62
msgid "== OPTIONS"
msgstr "== OPTIONS"

# type: Plain text
#: makepkg.txt:29
#, no-wrap
msgid ""
"-a, --searchdeps::\n"
"\tTry to guess the correct value of the depends() array.\n"
msgstr ""

# type: Plain text
#: makepkg.txt:32
#, no-wrap
msgid ""
"-A <url>::\n"
"\trsync cache url to use before downloading anything.\n"
msgstr ""

# type: Plain text
#: makepkg.txt:39
#, no-wrap
msgid ""
"-b, --builddeps::\n"
"\tBuild missing dependencies from source. When makepkg finds missing build-time\n"
"\tor run-time dependencies, it will look for the dependencies' FrugalBuild\n"
"\tfiles under $fst_root (set in your /etc/repoman.conf). If it finds them it will\n"
"\trun another copy of makepkg to build and install the missing dependencies. The\n"
"\tchild makepkg calls will be made with the -b and -i options.\n"
msgstr ""

# type: Plain text
#: makepkg.txt:42
#, no-wrap
msgid ""
"-B, --noccache::\n"
"\tDo not use ccache during build.\n"
msgstr ""

# type: Plain text
#: makepkg.txt:45
#, no-wrap
msgid ""
"-c, --clean::\n"
"\tClean up leftover work files/directories after a successful build.\n"
msgstr ""

# type: Plain text
#: makepkg.txt:50
#, no-wrap
msgid ""
"-C, --cleancache::\n"
"\tUsed with --chroot cleans up the chroot which means removing unnecessary\n"
"\tpackages from it. If used twice, then it removes all source files from the\n"
"\tcache directory and cleans up the full compiler cache to free up disk space.\n"
msgstr ""

# type: Plain text
#: makepkg.txt:55
#, no-wrap
msgid ""
"-d, --nodeps::\n"
"\tDo not perform any dependency checks. This will let you override/ignore any\n"
"\tdependencies required. There's a good chance this option will break the build\n"
"\tprocess if all of the dependencies aren't installed.\n"
msgstr ""

# type: Plain text
#: makepkg.txt:58
#, no-wrap
msgid ""
"-D <pkgname>::\n"
"\tClean up only one package's compiler cache. (Uses ccache -C.)\n"
msgstr ""

# type: Plain text
#: makepkg.txt:63
#, no-wrap
msgid ""
"-e, --noextract::\n"
"\tDo not extract source files. Instead, use whatever already exists in the src/\n"
"\tdirectory. This is handy if you want to go into src and manually patch/tweak\n"
"\tcode, then make a package out of the result.\n"
msgstr ""

# type: Plain text
#: makepkg.txt:68
#, no-wrap
msgid ""
"-f, --force::\n"
"\tmakepkg will not build a package if a pkgname-pkgver-pkgrel-arch.fpm file\n"
"\talready exists in the build directory. You can override this behaviour with the\n"
"\t--force switch.\n"
msgstr ""

# type: Plain text
#: makepkg.txt:72
#, no-wrap
msgid ""
"-g, --gensha1::\n"
"\tDownload all source files (if required) and use sha1sum to generate sha1 hashes\n"
"\tfor each of them.\n"
msgstr ""

# type: Plain text
#: makepkg.txt:76
#, no-wrap
msgid ""
"-G, --wrtsha1::\n"
"\tSame as `-g`, but replace the contents of the sha1sums() array in the FrugalBuild\n"
"\twith the result.\n"
msgstr ""

# type: Plain text
#: makepkg.txt:79
#, no-wrap
msgid ""
"-h, --help::\n"
"\tOutput syntax and commandline options.\n"
msgstr ""

# type: Plain text
#: makepkg.txt:82
#, no-wrap
msgid ""
"-i, --install::\n"
"\tInstall/Upgrade the package after a successful build.\n"
msgstr ""

# type: Plain text
#: makepkg.txt:86
#, no-wrap
msgid ""
"-j <jobs>::\n"
"\tSets MAKEFLAGS=\"-j<jobs>\" before building the package. This is useful for\n"
"\toverriding the MAKEFLAGS setting in /etc/makepkg.conf.\n"
msgstr ""

# type: Plain text
#: makepkg.txt:91
#, no-wrap
msgid ""
"-l <pkgname>::\n"
"\tDownload the package's buildscript before starting the build. This is useful if\n"
"\tyou do not want to do a full 'repoman upd' nor want to download manually the\n"
"\tbuildscript.\n"
msgstr ""

# type: Plain text
#: makepkg.txt:94
#, no-wrap
msgid ""
"-m, --nocolor::\n"
"\tDisable color in output messages.\n"
msgstr ""

# type: Plain text
#: makepkg.txt:97
#, no-wrap
msgid ""
"-n, --nostrip::\n"
"\tDo not strip binaries and libraries.\n"
msgstr ""

# type: Plain text
#: makepkg.txt:100
#, no-wrap
msgid ""
"-o, --nobuild::\n"
"\tDownload and extract files only, do not build.\n"
msgstr ""

# type: Plain text
#: makepkg.txt:103
#, no-wrap
msgid ""
"-p <buildscript>::\n"
"\tRead the package script <buildscript> instead of the default (FrugalBuild).\n"
msgstr ""

# type: Plain text
#: makepkg.txt:107
#, no-wrap
msgid ""
"-r, --rmdeps::\n"
"\tUpon successful build, remove any dependencies installed by makepkg/pacman-g2\n"
"\tduring dependency auto-resolution (using -b or -s).\n"
msgstr ""

# type: Plain text
#: makepkg.txt:111
#, no-wrap
msgid ""
"-R, --chroot::\n"
"\tBuild the package in a chroot environment. This is the default unless -g or -o\n"
"\tis used.\n"
msgstr ""

# type: Plain text
#: makepkg.txt:114
#, no-wrap
msgid ""
"-H, --host::\n"
"\tBuild the package on the host system. The opposite of the -R option.\n"
msgstr ""

# type: Plain text
#: makepkg.txt:120
#, no-wrap
msgid ""
"-s, --syncdeps::\n"
"\tInstall missing dependencies using pacman-g2. When makepkg finds missing\n"
"\tbuild-time or run-time dependencies, it will run pacman-g2 to try and resolve\n"
"\tthem. If successful, pacman-g2 will download the missing packages from a\n"
"\tpackage repository and install them for you.\n"
msgstr ""

# type: Plain text
#: makepkg.txt:125
#, no-wrap
msgid ""
"-t <tree>::\n"
"\tWhen building in a chroot (using -R) you may want to build packages for a\n"
"\tversion other than the host one. Using this option, it's possible to build\n"
"\tpackages for \"stable\" while the host system is \"current\" and vica versa.\n"
msgstr ""

# type: Plain text
#: makepkg.txt:133
#, no-wrap
msgid ""
"-u, --noup2date::\n"
"\tDo not check for newer version before starting build. Normally makepkg will\n"
"\tprevent you from building obsolete source by mistake. If you know what you are\n"
"\tdoing, you can disable this feature with this switch. -S, --sudosync Install\n"
"\tmissing dependencies using pacman-g2 and sudo. This is the same as -s except\n"
"\tthat makepkg will call pacman-g2 with sudo. This means you don't have to build\n"
"\tas root to use dependency auto-resolution.\n"
msgstr ""

# type: Plain text
#: makepkg.txt:137
#, no-wrap
msgid ""
"-w <destdir>::\n"
"\tWrite the resulting package file to the directory <destdir> instead of the\n"
"\tcurrent working directory.\n"
msgstr ""

# type: Plain text
#: makepkg.txt:140
#, no-wrap
msgid ""
"--gzip::\n"
"\tUse gzip compression for a package instead of bzip2.\n"
msgstr ""

# type: Plain text
#: makepkg.txt:145
#, no-wrap
msgid ""
"--noconfirm::\n"
"\tWhen calling pacman-g2 to resolve dependencies or conflicts, makepkg can pass\n"
"\tthe --noconfirm option to it so it does not wait for any user input before\n"
"\tproceeding with operations.\n"
msgstr ""

# type: Plain text
#: makepkg.txt:149
#, no-wrap
msgid ""
"--noprogressbar::\n"
"\tWhen calling pacman-g2, makepkg can pass the --noprogressbar option to it. This\n"
"\tis useful if one is directing makepkg's output to a non-terminal (ie, a file).\n"
msgstr ""

# type: Plain text
#: makepkg.txt:151 pacman-g2.txt:290
msgid "== CONFIGURATION"
msgstr "== CONFIGURATION"

# type: Plain text
#: makepkg.txt:156
msgid ""
"Configuration options are stored in /etc/makepkg.conf. This file is parsed "
"as a bash script, so you can export any special compiler flags you wish to "
"use. This is helpful for building for different architectures, or with "
"different optimizations."
msgstr ""

# type: Plain text
#: makepkg.txt:159
msgid ""
"NOTE: This does not guarantee that all package Makefiles will use your "
"exported variables. Some of them are flaky..."
msgstr ""

# type: Plain text
#: makepkg.txt:163
#, no-wrap
msgid "*FrugalBuild*(5), *pacman-g2*(8)\n"
msgstr "*FrugalBuild*(5), *pacman-g2*(8)\n"

# type: Plain text
#: pacman-g2.txt:2
msgid "= pacman-g2(8)"
msgstr "= pacman-g2(8)"

# type: Plain text
#: pacman-g2.txt:6
msgid "pacman-g2 - package manager utility"
msgstr ""

# type: Plain text
#: pacman-g2.txt:10
msgid "pacman-g2 <operation> [options] <package> [package] ..."
msgstr ""

# type: Plain text
#: pacman-g2.txt:17
msgid ""
"pacman-g2 is a package management utility that tracks installed packages on "
"a linux system. It has simple dependency support and the ability to connect "
"to a remote ftp server and automatically upgrade packages on the local "
"system.  pacman-g2 packages are in a bzipped tar format."
msgstr ""

# type: Plain text
#: pacman-g2.txt:19
msgid "== OPERATIONS"
msgstr "== OPERATIONS"

# type: Plain text
#: pacman-g2.txt:23
#, no-wrap
msgid ""
"-A, --add::\n"
"\tAdd a package to the system. Package will be uncompressed into the installation\n"
"\troot and the database will be updated.\n"
msgstr ""

# type: Plain text
#: pacman-g2.txt:27
#, no-wrap
msgid ""
"-F, --freshen::\n"
"\tThis is like --upgrade except that, unlike --upgrade, this will only upgrade\n"
"\tpackages that are already installed on your system.\n"
msgstr ""

# type: Plain text
#: pacman-g2.txt:34
#, no-wrap
msgid ""
"-Q, --query::\n"
"\tQuery the package database. This operation allows you to view installed\n"
"\tpackages and their files, as well as meta-info about individual packages\n"
"\t(dependencies, conflicts, install date, build date, size). This can be run\n"
"\tagainst the local package database or can be used on individual .fpm packages.\n"
"\tSee QUERY OPTIONS below.\n"
msgstr ""

# type: Plain text
#: pacman-g2.txt:39
#, no-wrap
msgid ""
"-R, --remove::\n"
"\tRemove a package from the system. Files belonging to the specified package will\n"
"\tbe deleted, and the database will be updated. Most configuration files will be\n"
"\tsaved with a .pacsave extension unless the --nosave option was used.\n"
msgstr ""

# type: Plain text
#: pacman-g2.txt:46
#, no-wrap
msgid ""
"-S, --sync::\n"
"\tSynchronize packages. With this function you can install packages directly from\n"
"\tthe ftp servers, complete with all dependencies required to run the packages.\n"
"\tFor example, pacman-g2 -S qt will download qt and all the packages it depends\n"
"\ton and install them. You could also use pacman-g2 -Su to upgrade all packages\n"
"\tthat are out of date (see below). Target can be a regex, like:\n"
msgstr ""

# type: Plain text
#: pacman-g2.txt:48
#, no-wrap
msgid "\t# pacman-g2 -S gst-.*\n"
msgstr ""

# type: Plain text
#: pacman-g2.txt:53
#, no-wrap
msgid ""
"-U, --upgrade::\n"
"\tUpgrade a package. This is essentially a \"remove-then-add\" process. See\n"
"\tHANDLING CONFIG FILES for an explanation on how pacman-g2 takes care of config\n"
"\tfiles.\n"
msgstr ""

# type: Plain text
#: pacman-g2.txt:56
#, no-wrap
msgid ""
"-V, --version::\n"
"\tDisplay version and exit.\n"
msgstr ""

# type: Plain text
#: pacman-g2.txt:60
#, no-wrap
msgid ""
"-h, --help::\n"
"\tDisplay syntax for the given operation. If no operation was supplied then the\n"
"\tgeneral syntax is shown.\n"
msgstr ""

# type: Plain text
#: pacman-g2.txt:67
#, no-wrap
msgid ""
"-d, --nodeps::\n"
"\tSkips all dependency checks. Normally, pacman-g2 will always check a package's\n"
"\tdependency fields to ensure that all dependencies are installed and there are\n"
"\tno package conflicts in the system. This switch disables these checks.\n"
msgstr ""

# type: Plain text
#: pacman-g2.txt:73
#, no-wrap
msgid ""
"-f, --force::\n"
"\tBypass file conflict checks, overwriting conflicting files. If the package that\n"
"\tis about to be installed contains files that are already installed, this option\n"
"\twill cause all those files to be overwritten. This option should be used with\n"
"\tcare, ideally not at all.\n"
msgstr ""

# type: Plain text
#: pacman-g2.txt:77
#, no-wrap
msgid ""
"--noarch::\n"
"\tBypass the architecture check, so that you can for example install an `i686`\n"
"\tpackage on `x86_64` if you know what you're doing.\n"
msgstr ""

# type: Plain text
#: pacman-g2.txt:85
#, no-wrap
msgid ""
"-r, --root <path>::\n"
"\tSpecify alternative installation root (default is \"/\"). This should not be used\n"
"\tas a way to install software into e.g. /usr/local instead of /usr. Instead this\n"
"\tshould be used if you want to install a package on a temporary mounted\n"
"\tpartition, which is \"owned\" by another system. By using this option you not\n"
"\tonly specify where the software should be installed, but you also specify which\n"
"\tpackage database to use.\n"
msgstr ""

# type: Plain text
#: pacman-g2.txt:88
#, no-wrap
msgid ""
"-b, --dbpath:\n"
"\tSpecify an alternative database path (default is `var/lib/pacman`).\n"
msgstr ""

# type: Plain text
#: pacman-g2.txt:91
#, no-wrap
msgid ""
"-v, --verbose::\n"
"\tOutput more status and error messages.\n"
msgstr ""

# type: Plain text
#: pacman-g2.txt:94
#, no-wrap
msgid ""
"--config <path>::\n"
"\tSpecify an alternate configuration file.\n"
msgstr ""

# type: Plain text
#: pacman-g2.txt:98
#, no-wrap
msgid ""
"--noconfirm::\n"
"\tBypass any and all \"Are you sure?\" messages. It's not a good idea to do this\n"
"\tunless you want to run pacman-g2 from a script.\n"
msgstr ""

# type: Plain text
#: pacman-g2.txt:103
#, no-wrap
msgid ""
"--ask <number>::\n"
"\tFinetune the --noconfirm switch by not answering \"yes\" to all libpacman\n"
"\tquestions, but you are able to specify yes/no for all type of them. The types\n"
"\tare the followings:\n"
msgstr ""

# type: Plain text
#: pacman-g2.txt:110
#, no-wrap
msgid ""
"\t* The given package is in IgnorePkg. (1)\n"
"\t* Replace package foo with bar? (2)\n"
"\t* foo conflicts with bar. Remove bar? (4)\n"
"\t* Do you want to delete the corrupted package? (8)\n"
"\t* Local version is newer. (16)\n"
"\t* Local version is up to date. (32)\n"
msgstr ""

# type: Plain text
#: pacman-g2.txt:113
#, no-wrap
msgid ""
"\tSelect for what types do you want to answer yes, sum up the values and use the\n"
"\tresult as a parameter to this option.\n"
msgstr ""

# type: Plain text
#: pacman-g2.txt:117
#, no-wrap
msgid ""
"--noprogressbar::\n"
"\tDo not show a progress bar when downloading files. This can be useful for\n"
"\tscripts that call pacman-g2 and capture the output.\n"
msgstr ""

# type: Plain text
#: pacman-g2.txt:120
#, no-wrap
msgid ""
"--noscriptlet::\n"
"\tDo not execute install scriptlets, if any.\n"
msgstr ""

# type: Plain text
#: pacman-g2.txt:123
#, no-wrap
msgid ""
"--nointegrity::\n"
"\tSkip the SHA1 integrity check for the downloaded packages.\n"
msgstr ""

# type: Plain text
#: pacman-g2.txt:125
msgid "== SYNC OPTIONS"
msgstr ""

# type: Plain text
#: pacman-g2.txt:132
#, no-wrap
msgid ""
"-c, --clean::\n"
"\tRemove old packages from the cache. When pacman-g2 downloads packages, it saves\n"
"\tthem in /var/cache/pacman-g2/pkg. If you need to free up diskspace, you can remove\n"
"\tthese packages by using the --clean option. Using one --clean (or -c) switch\n"
"\twill only remove old packages. Use it twice to remove all packages from the\n"
"\tcache.\n"
msgstr ""

# type: Plain text
#: pacman-g2.txt:137
#, no-wrap
msgid ""
"-e, --dependsonly::\n"
"\tDon't install the packages itself, only their dependencies. This can be handy\n"
"\tif you want to install the packages themselves with different options or from\n"
"\tsource.\n"
msgstr ""

# type: Plain text
#: pacman-g2.txt:141
#, no-wrap
msgid ""
"-g, --groups::\n"
"\tDisplay all the members for each package group specified. If no group names are\n"
"\tprovided, all groups will be listed.\n"
msgstr ""

# type: Plain text
#: pacman-g2.txt:146
#, no-wrap
msgid ""
"-i, --info::\n"
"\tDisplay dependency information for a given package. This will search through\n"
"\tall repositories for a matching package and display the dependencies,\n"
"\tconflicts, etc.\n"
msgstr ""

# type: Plain text
#: pacman-g2.txt:150
#, no-wrap
msgid ""
"-l, --list::\n"
"\tList all files in the specified repositories. Multiple repositories can be\n"
"\tspecified on the command line.\n"
msgstr ""

# type: Plain text
#: pacman-g2.txt:155
#, no-wrap
msgid ""
"-p, --print-uris::\n"
"\tPrint out URIs for each package that will be installed, including any\n"
"\tdependencies that have yet to be installed. These can be piped to a file and\n"
"\tdownloaded at a later time, using a program like wget.\n"
msgstr ""

# type: Plain text
#: pacman-g2.txt:159
#, no-wrap
msgid ""
"-s, --search <regexp>::\n"
"\tThis will search each package in the package list for names or descriptions\n"
"\tthat contains <regexp>.\n"
msgstr ""

# type: Plain text
#: pacman-g2.txt:167
#, no-wrap
msgid ""
"-u, --sysupgrade::\n"
"\tUpgrades all packages that are out of date. pacman-g2 will examine every\n"
"\tpackage installed on the system, and if a newer package exists on the server it\n"
"\twill upgrade. pacman-g2 will present a report of all packages it wants to\n"
"\tupgrade and will not proceed without user confirmation. Dependencies are\n"
"\tautomatically resolved at this level and will be installed/upgraded if\n"
"\tnecessary.\n"
msgstr ""

# type: Plain text
#: pacman-g2.txt:170
#, no-wrap
msgid ""
"-w, --downloadonly::\n"
"\tRetrieve all packages from the server, but do not install/upgrade anything.\n"
msgstr ""

# type: Plain text
#: pacman-g2.txt:175
#, no-wrap
msgid ""
"-y, --refresh::\n"
"\tDownload a fresh copy of the master package list from the ftp server defined in\n"
"\t/etc/pacman-g2.conf. This should typically be used each time you use\n"
"\t--sysupgrade.\n"
msgstr ""

# type: Plain text
#: pacman-g2.txt:180
#, no-wrap
msgid ""
"--ignore <pkg>::\n"
"\tThis option functions exactly the same as the IgnorePkg configuration\n"
"\tdirective. Sometimes it can be handy to skip some package updates without\n"
"\thaving to edit pacman-g2.conf each time.\n"
msgstr ""

# type: Plain text
#: pacman-g2.txt:182
msgid "== REMOVE OPTIONS"
msgstr ""

# type: Plain text
#: pacman-g2.txt:186
#, no-wrap
msgid ""
"-c, --cascade::\n"
"\tRemove all target packages, as well as all packages that depend on one or more\n"
"\ttarget packages. This operation is recursive.\n"
msgstr ""

# type: Plain text
#: pacman-g2.txt:189
#, no-wrap
msgid ""
"-k, --keep::\n"
"\tRemoves the database entry only. Leaves all files in place.\n"
msgstr ""

# type: Plain text
#: pacman-g2.txt:195
#, no-wrap
msgid ""
"-n, --nosave::\n"
"\tInstructs pacman-g2 to ignore file backup designations. Normally, when a file\n"
"\tis about to be removed from the system the database is first checked to see if\n"
"\tthe file should be renamed to a .pacsave extension. If --nosave is used, these\n"
"\tdesignations are ignored and the files are removed.\n"
msgstr ""

# type: Plain text
#: pacman-g2.txt:201
#, no-wrap
msgid ""
"-s, --recursive::\n"
"\tFor each target specified, remove it and all its dependencies, provided that\n"
"\t(A) they are not required by other packages; and (B) they were not explicitly\n"
"\tinstalled by the user. This option is analagous to a backwards --sync\n"
"\toperation.\n"
msgstr ""

# type: Plain text
#: pacman-g2.txt:203
msgid "== QUERY OPTIONS"
msgstr ""

# type: Plain text
#: pacman-g2.txt:206
#, no-wrap
msgid ""
"-c, --changelog::\n"
"\tView the changelog of a package.\n"
msgstr ""

# type: Plain text
#: pacman-g2.txt:210
#, no-wrap
msgid ""
"-e, --orphans::\n"
"\tList all packages that were installed as a dependency (ie, not installed\n"
"\texplicitly) and are not required by any other packages.\n"
msgstr ""

# type: Plain text
#: pacman-g2.txt:214
#, no-wrap
msgid ""
"-g, --groups::\n"
"\tDisplay all groups that a specified package is part of. If no package names are\n"
"\tprovided, all groups and members will be listed.\n"
msgstr ""

# type: Plain text
#: pacman-g2.txt:218
#, no-wrap
msgid ""
"-i, --info::\n"
"\tDisplay information on a given package. If it is used with the -p option then\n"
"\tthe .PKGINFO file will be printed.\n"
msgstr ""

# type: Plain text
#: pacman-g2.txt:222
#, no-wrap
msgid ""
"-l, --list::\n"
"\tList all files owned by <package>. Multiple packages can be specified on the\n"
"\tcommand line.\n"
msgstr ""

# type: Plain text
#: pacman-g2.txt:226
#, no-wrap
msgid ""
"-m, --foreign::\n"
"\tList all packages that were not found in the sync database(s). Typically these\n"
"\tare packages that were downloaded manually and installed with --add.\n"
msgstr ""

# type: Plain text
#: pacman-g2.txt:229
#, no-wrap
msgid ""
"-o, --owns <path>::\n"
"\tSearch for the package that owns a given file or directory.\n"
msgstr ""

# type: Plain text
#: pacman-g2.txt:234
#, no-wrap
msgid ""
"-p, --file::\n"
"\tTells pacman-g2 that the package supplied on the command line is a file, not an\n"
"\tentry in the database. Pacman will decompress the file and query it. This is\n"
"\tuseful with --info and --list.\n"
msgstr ""

# type: Plain text
#: pacman-g2.txt:238
#, no-wrap
msgid ""
"-s, --search <regexp>::\n"
"\tThis will search each locally-installed package for names or descriptions that\n"
"\tcontains <regexp>.\n"
msgstr ""

# type: Plain text
#: pacman-g2.txt:241
#, no-wrap
msgid ""
"-t, --test::\n"
"\tTests the local database, by searching for missing informations. Example:\n"
msgstr ""

# type: Plain text
#: pacman-g2.txt:246
#, no-wrap
msgid ""
"\t----\n"
"\t$ pacman-g2 -Qt\n"
"\t:: zip-2.32-1: file list is missing\n"
"\t----\n"
msgstr ""

# type: Plain text
#: pacman-g2.txt:248
#, no-wrap
msgid "\tThe recommended method in this case is to remove the database entry:\n"
msgstr ""

# type: Plain text
#: pacman-g2.txt:252
#, no-wrap
msgid ""
"\t----\n"
"\t# rm -rf /var/lib/pacman-g2/local/zip-2.32-1\n"
"\t----\n"
msgstr ""

# type: Plain text
#: pacman-g2.txt:254
#, no-wrap
msgid "\tand forcing the reinstall of the package:\n"
msgstr ""

# type: Plain text
#: pacman-g2.txt:258
#, no-wrap
msgid ""
"\t----\n"
"\t# pacman-g2 -Sf zip --noconfirm\n"
"\t----\n"
msgstr ""

# type: Plain text
#: pacman-g2.txt:260
msgid "== HANDLING CONFIG FILES"
msgstr ""

# type: Plain text
#: pacman-g2.txt:267
msgid ""
"pacman-g2 uses the same logic as rpm to determine action against files that "
"are designated to be backed up. During an upgrade, it uses 3 md5 hashes for "
"each backup file to determine the required action: one for the original file "
"installed, one for the new file that's about to be installed, and one for "
"the actual file existing on the filesystem. After comparing these 3 hashes, "
"the follow scenarios can result:"
msgstr ""

# type: Plain text
#: pacman-g2.txt:270
#, no-wrap
msgid ""
"original=X, current=X, new=X::\n"
"\tAll three files are the same, so we win either way. Install the new file.\n"
msgstr ""

# type: Plain text
#: pacman-g2.txt:275
#, no-wrap
msgid ""
"original=X, current=X, new=Y::\n"
"\tThe current file is un-altered from the original but the new one is different.\n"
"\tSince the user did not ever modify the file, and the new one may contain\n"
"\timprovements/bugfixes, we install the new file.\n"
msgstr ""

# type: Plain text
#: pacman-g2.txt:280
#, no-wrap
msgid ""
"original=X, current=Y, new=X::\n"
"\tBoth package versions contain the exact same file, but the one on the\n"
"\tfilesystem has been modified since. In this case, we leave the current file in\n"
"\tplace.\n"
msgstr ""

# type: Plain text
#: pacman-g2.txt:283
#, no-wrap
msgid ""
"original=X, current=Y, new=Y::\n"
"\tThe new one is identical to the current one. Win win. Install the new file.\n"
msgstr ""

# type: Plain text
#: pacman-g2.txt:288
#, no-wrap
msgid ""
"original=X, current=Y, new=Z::\n"
"\tAll three files are different, so we install the new file with a .pacnew\n"
"\textension and warn the user, so she can manually move the file into place after\n"
"\tmaking any necessary customizations.\n"
msgstr ""

# type: Plain text
#: pacman-g2.txt:296
msgid ""
"pacman-g2 will attempt to read /etc/pacman-g2.conf each time it is invoked. "
"This configuration file is divided into sections or repositories. Each "
"section defines a package repository that pacman-g2 can use when searching "
"for packages in --sync mode. The exception to this is the options section, "
"which defines global options."
msgstr ""

# type: Plain text
#: pacman-g2.txt:298
msgid "Example:"
msgstr ""

# type: Plain text
#: pacman-g2.txt:303
msgid "[options] HoldPkg = pacman-g2 glibc bash coreutils HoldPkg = chkconfig"
msgstr ""

# type: Plain text
#: pacman-g2.txt:305
msgid "Include = /etc/pacman-g2/repos/frugalware-current"
msgstr ""

# type: Plain text
#: pacman-g2.txt:308
#, no-wrap
msgid ""
"[custom]\n"
"Server = file:///home/pkgs\n"
"----\n"
msgstr ""

# type: Plain text
#: pacman-g2.txt:311
msgid "== CONFIG: OPTIONS"
msgstr ""

# type: Plain text
#: pacman-g2.txt:315
#, no-wrap
msgid ""
"DBPath = path/to/db/dir::\n"
"\tOverrides the default location of the toplevel database directory. The default\n"
"\tis var/lib/pacman-g2.\n"
msgstr ""

# type: Plain text
#: pacman-g2.txt:319
#, no-wrap
msgid ""
"CacheDir = path/to/cache/dir::\n"
"\tOverrides the default location of the package cache directory. The default is\n"
"\tvar/cache/pacman-g2.\n"
msgstr ""

# type: Plain text
#: pacman-g2.txt:323
#, no-wrap
msgid ""
"HoldPkg = <package> [package] ...::\n"
"\tIf a user tries to --remove a package that's listed in HoldPkg, pacman-g2 will\n"
"\task for confirmation before proceeding.\n"
msgstr ""

# type: Plain text
#: pacman-g2.txt:327
#, no-wrap
msgid ""
"IgnorePkg = <package> [package] ...::\n"
"\tInstructs pacman-g2 to ignore any upgrades for this package when performing a\n"
"\t--sysupgrade.\n"
msgstr ""

# type: Plain text
#: pacman-g2.txt:331
#, no-wrap
msgid ""
"UpgradeDelay = <number>::\n"
"\tUpgrade only the packages that are at least <number> days old when performing a\n"
"\t--sysupgrade.\n"
msgstr ""

# type: Plain text
#: pacman-g2.txt:335
#, no-wrap
msgid ""
"OldDelay = <number>::\n"
"\tIssue a warning when you install a package, but the local sync database (which\n"
"\tcan be upgraded using -Sy) haven't been updated for <number> days.\n"
msgstr ""

# type: Plain text
#: pacman-g2.txt:339
#, no-wrap
msgid ""
"MaxTries = <number>::\n"
"\tTry to download packages <number> times. This is useful in case you have a bad\n"
"\tinternet connection and your packages often get corrupted during the download.\n"
msgstr ""

# type: Plain text
#: pacman-g2.txt:343
#, no-wrap
msgid ""
"Include = <path>::\n"
"\tInclude another config file. This config file can include repositories or\n"
"\tgeneral configuration options.\n"
msgstr ""

# type: Plain text
#: pacman-g2.txt:346
#, no-wrap
msgid ""
"ProxyServer = <host|ip>::\n"
"\tIf set, pacman-g2 will use this proxy server for all ftp/http transfers.\n"
msgstr ""

# type: Plain text
#: pacman-g2.txt:350
#, no-wrap
msgid ""
"ProxyPort = port::\n"
"\tIf set, pacman-g2 will use this proxy port for all ftp/http transfers.\n"
"\t(Default: 80).\n"
msgstr ""

# type: Plain text
#: pacman-g2.txt:356
#, no-wrap
msgid ""
"XferCommand = /path/to/command %u::\n"
"\tIf set, pacman-g2 will use this external program to download all remote files.\n"
"\tAll instances of %u will be replaced with the URL to be downloaded. If present,\n"
"\tinstances of %o will be replaced with the local filename, plus a \".part\"\n"
"\textension, which allows programs like wget to do file resumes properly.\n"
msgstr ""

# type: Plain text
#: pacman-g2.txt:360
#, no-wrap
msgid ""
"\tThis option is useful for users who experience problems with pacman-g2's\n"
"\tbuilt-in http/ftp support, or need the more advanced proxy support that comes\n"
"\twith utilities like curl.\n"
msgstr ""

# type: Plain text
#: pacman-g2.txt:363
#, no-wrap
msgid ""
"NoPassiveFtp::\n"
"\tDisables passive ftp connections when downloading packages. (aka Active Mode)\n"
msgstr ""

# type: Plain text
#: pacman-g2.txt:367
#, no-wrap
msgid ""
"NoUpgrade = <file> [file] ...::\n"
"\tAll files listed with a NoUpgrade directive will never be touched during a\n"
"\tpackage install/upgrade.\n"
msgstr ""

# type: Plain text
#: pacman-g2.txt:369
#, no-wrap
msgid "\tNOTE: Do not include the leading slash when specifying files.\n"
msgstr ""

# type: Plain text
#: pacman-g2.txt:376
#, no-wrap
msgid ""
"NoExtract = <file> [file] ...::\n"
"\tAll files listed with a NoExtract directive will never be extracted from a\n"
"\tpackage into the filesystem. This can be useful when you don't want part of a\n"
"\tpackage to be installed. For example, if your httpd root uses an index.php,\n"
"\tthen you would not want the index.html file to be extracted from the apache\n"
"\tpackage.\n"
msgstr ""

# type: Plain text
#: pacman-g2.txt:380
#, no-wrap
msgid ""
"UseSyslog::\n"
"\tLog action messages through *syslog*(2). This will insert pacman-g2 log entries\n"
"\tinto your /var/log/messages or equivalent.\n"
msgstr ""

# type: Plain text
#: pacman-g2.txt:383
#, no-wrap
msgid ""
"LogFile = /path/to/file::\n"
"\tLog actions directly to a file, usually /var/log/pacman-g2.log.\n"
msgstr ""

# type: Plain text
#: pacman-g2.txt:385
msgid "== CONFIG: REPOSITORIES"
msgstr ""

# type: Plain text
#: pacman-g2.txt:392
msgid ""
"Each repository section defines a section name and at least one location "
"where the packages can be found. The section name is defined by the string "
"within square brackets (eg, the two above are 'current' and 'custom'). "
"Locations are defined with the Server directive and follow a URL naming "
"structure. Currently only ftp is supported for remote servers. If you want "
"to use a local directory, you can specify the full path with a 'file://' "
"prefix, as shown above."
msgstr ""

# type: Plain text
#: pacman-g2.txt:394
msgid "== USING YOUR OWN REPOSITORY"
msgstr ""

# type: Plain text
#: pacman-g2.txt:399
msgid ""
"Let's say you have a bunch of custom packages in /home/pkgs and their "
"respective FrugalBuild files are all in /var/fst/local. All you need to do "
"is generate a compressed package database in the /home/pkgs directory so "
"pacman-g2 can find it when run with --refresh."
msgstr ""

# type: Plain text
#: pacman-g2.txt:402
#, no-wrap
msgid ""
"# gensync /var/fst/local /home/pkgs/custom.fdb\n"
"----\n"
msgstr ""

# type: Plain text
#: pacman-g2.txt:412
msgid ""
"The above command will read all FrugalBuild files in /var/fst/local and "
"generate a compressed database called /home/pkgs/custom.fdb. Note that the "
"database must be of the form {treename}.fdb, where {treename} is the name of "
"the section defined in the configuration file. That's it! Now configure your "
"custom section in the configuration file as shown in the config example "
"above.  Pacman will now use your package repository. If you add new packages "
"to the repository, remember to re-generate the database and use pacman-g2's "
"--refresh option."
msgstr ""

# type: Plain text
#: pacman-g2.txt:414
msgid "== HOOKS"
msgstr "== CROCHETS"

# type: Plain text
#: pacman-g2.txt:418
msgid ""
"pacman-g2 will attempt to execute hooks in the /etc/pacman-g2/hooks "
"directory.  The hooks are like package scriptlets: each file can provide "
"functions for a given hook. At the moment the following hooks are supported:"
msgstr ""

# type: Plain text
#: pacman-g2.txt:421
#, no-wrap
msgid ""
"post_sysupgrade::\n"
"\tExecuted after a successful `pacman-g2 -S --sysupgrade`.\n"
msgstr ""

# type: Plain text
#: pacman-g2.txt:425
#, no-wrap
msgid "*makepkg*(8)\n"
msgstr ""

# type: Plain text
#~ msgid ""
#~ "# optimization OK\n"
#~ "----\n"
#~ msgstr ""
#~ "# optimization OK\n"
#~ "----\n"
